---
import BaseLayout from "../../layouts/BaseLayout.astro";
import { getCollection } from "astro:content";

export async function getStaticPaths() {
  const entries = await getCollection("imprimibles");
  return entries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { title, description, cover, pdf, subject, level, date, tags } =
  entry.data;

const site = Astro.site ?? "https://imprimibles.vercel.app";
const pageUrl = new URL(`/imprimibles/${entry.slug}/`, site).href;

// Imagen de portada absoluta (para OG/Twitter y JSON-LD)
const absCover = cover ? new URL(cover, site).href : undefined;
const ogImage = absCover ?? new URL("/og.png", site).href;

// PDF absoluto para enlaces y JSON-LD
const pdfUrl = pdf
  ? pdf.startsWith("http://") || pdf.startsWith("https://")
    ? pdf
    : new URL(pdf.startsWith("/") ? pdf : `/${pdf}`, site).href
  : undefined;

// ColecciÃ³n completa y relacionados (mismo subject o level)
const all = await getCollection("imprimibles");
const related = all
  .filter((e) => e.slug !== entry.slug)
  .filter((e) => {
    const d = e.data || {};
    const sameSubject = subject && d.subject && d.subject === subject;
    const sameLevel = level && d.level && d.level === level;
    return sameSubject || sameLevel;
  })
  .sort((a, b) => {
    const da = new Date(a.data?.date ?? 0).getTime();
    const db = new Date(b.data?.date ?? 0).getTime();
    return db - da;
  })
  .slice(0, 3);

// JSON-LD: recurso + pÃ¡gina + breadcrumbs + relacionados
const organization = {
  "@type": "Organization",
  name: "Imprimibles Educativos",
  url: site,
  // logo opcional si lo tienes: "logo": new URL("/images/logo.png", site).href,
};

const learningLd = {
  "@context": "https://schema.org",
  "@type": ["LearningResource", "CreativeWork"],
  name: title,
  description,
  inLanguage: "es",
  educationalLevel: level || undefined,
  about: subject || undefined,
  // learningResourceType: "Worksheet", // descomenta si quieres forzar el tipo
  keywords: Array.isArray(tags) && tags.length ? tags.join(", ") : undefined,
  isAccessibleForFree: true,
  url: pageUrl,
  image: absCover,
  thumbnailUrl: absCover,
  datePublished: date ? new Date(date).toISOString() : undefined,
  author: organization,
  publisher: organization,
  mainEntityOfPage: pageUrl,
  potentialAction: pdfUrl
    ? {
        "@type": "DownloadAction",
        target: pdfUrl,
      }
    : undefined,
  encoding: pdfUrl
    ? [
        {
          "@type": "MediaObject",
          fileFormat: "application/pdf",
          contentUrl: pdfUrl,
        },
      ]
    : undefined,
};

const webPageLd = {
  "@context": "https://schema.org",
  "@type": "WebPage",
  name: title,
  url: pageUrl,
  primaryImageOfPage: absCover,
  description,
  isPartOf: { "@type": "WebSite", name: "Imprimibles Educativos", url: site },
};

const breadcrumbsLd = {
  "@context": "https://schema.org",
  "@type": "BreadcrumbList",
  itemListElement: [
    {
      "@type": "ListItem",
      position: 1,
      name: "Imprimibles",
      item: new URL("/imprimibles/", site).href,
    },
    {
      "@type": "ListItem",
      position: 2,
      name: title,
      item: pageUrl,
    },
  ],
};

const relatedLd =
  related.length > 0
    ? {
        "@context": "https://schema.org",
        "@type": "ItemList",
        itemListElement: related.map((r, i) => ({
          "@type": "ListItem",
          position: i + 1,
          url: new URL(`/imprimibles/${r.slug}/`, site).href,
          name: r.data?.title,
        })),
      }
    : undefined;
---

<BaseLayout
  title={`${title} | Imprimibles Educativos`}
  description={description}
  ogImage={ogImage}
  ogType="article"
>
  <Fragment slot="head">
    <link rel="canonical" href={pageUrl} />
    <meta property="og:url" content={pageUrl} />
    {pdfUrl && <link rel="alternate" type="application/pdf" href={pdfUrl} />}

    <script type="application/ld+json" set:html={JSON.stringify(learningLd)} />
    <script type="application/ld+json" set:html={JSON.stringify(webPageLd)} />
    <script
      type="application/ld+json"
      set:html={JSON.stringify(breadcrumbsLd)}
    />
    {
      relatedLd && (
        <script
          type="application/ld+json"
          set:html={JSON.stringify(relatedLd)}
        />
      )
    }
  </Fragment>

  <article class="prose max-w-2xl mx-auto py-8">
    <h1>{title}</h1>

    {
      cover && (
        <img
          src={cover}
          alt={`Portada de "${title}"`}
          class="w-full rounded-lg aspect-[4/3] object-cover"
          loading="lazy"
          decoding="async"
        />
      )
    }

    <p class="text-slate-600">{description}</p>

    {
      date && (
        <p class="mt-2 text-xs text-slate-500">
          Publicado el{" "}
          <time dateTime={new Date(date).toISOString()}>
            {new Date(date).toLocaleDateString("es-ES", {
              day: "2-digit",
              month: "long",
              year: "numeric",
            })}
          </time>
        </p>
      )
    }

    <ul class="mt-4 text-sm text-slate-500">
      {
        subject && (
          <li>
            <strong>Asignatura:</strong> {subject}
          </li>
        )
      }
      {
        level && (
          <li>
            <strong>Nivel:</strong> {level}
          </li>
        )
      }
      {
        Array.isArray(tags) && tags.length > 0 && (
          <li>
            <strong>Etiquetas:</strong> {tags.join(", ")}
          </li>
        )
      }
    </ul>

    {
      subject && (
        <div class="mt-4">
          <a
            href={`/imprimibles/asignatura/${encodeURIComponent(subject)}/`}
            class="inline-flex items-center gap-2 px-4 py-2 rounded-xl border border-slate-300 text-slate-700 hover:bg-slate-50 transition"
          >
            Ver mÃ¡s de {subject} <span aria-hidden>â†’</span>
          </a>
        </div>
      )
    }

    {
      pdfUrl && (
        <a
          href={pdfUrl}
          target="_blank"
          rel="noopener noreferrer"
          class="inline-flex items-center px-6 py-3 mt-4 text-white bg-indigo-600 rounded-lg shadow hover:bg-indigo-700 transition"
          aria-label={`Descargar ${title} en PDF`}
        >
          ðŸ“¥ Descargar PDF
        </a>
      )
    }

    {
      related.length > 0 && (
        <section class="mt-12">
          <h2 class="text-xl font-semibold mb-4">Imprimibles relacionados</h2>
          <div class="grid grid-cols-1 sm:grid-cols-3 gap-4">
            {related.map((r) => {
              const rCover = r.data?.cover ?? "/og.png";
              const rHref = `/imprimibles/${r.slug}/`;
              return (
                <a
                  href={rHref}
                  data-astro-prefetch
                  class="block rounded-2xl overflow-hidden border hover:shadow transition"
                >
                  <img
                    src={rCover}
                    alt={r.data?.title}
                    loading="lazy"
                    decoding="async"
                    class="w-full aspect-[4/3] object-cover"
                  />
                  <div class="p-3">
                    <h3 class="font-semibold line-clamp-2">{r.data?.title}</h3>
                    <p class="text-sm text-slate-500 line-clamp-2">
                      {r.data?.description}
                    </p>
                    <div class="mt-2 text-xs text-slate-500">
                      {r.data?.subject && <span>{r.data.subject}</span>}
                      {r.data?.level && <span> Â· {r.data.level}</span>}
                    </div>
                  </div>
                </a>
              );
            })}
          </div>
        </section>
      )
    }
  </article>
</BaseLayout>
