---
import BaseLayout from "../../../layouts/BaseLayout.astro";
import { getCollection } from "astro:content";

export async function getStaticPaths() {
    const entries = await getCollection("imprimibles");
    const levels = Array.from(
        new Set(entries.map((e) => e.data?.level).filter(Boolean)),
    );

    // Importante: NO codificar en params
    return levels.map((l) => ({
        params: { level: l },
        props: { levelValue: l },
    }));
}

const { levelValue } = Astro.props;
const level = levelValue;

const site = Astro.site ?? "https://imprimibles.vercel.app";
// URL canónica SIN slash final
const pageUrl = new URL(`/imprimibles/nivel/${encodeURIComponent(level)}`, site)
    .href;

const all = await getCollection("imprimibles");
const list = all
    .filter((e) => e.data?.level === level)
    .sort((a, b) => {
        const da = new Date(a.data?.date ?? 0).getTime();
        const db = new Date(b.data?.date ?? 0).getTime();
        return db - da;
    });

const title = `Imprimibles para ${level}`;
const description = `Listado de imprimibles para ${level}. Descarga y utiliza en clase o en casa.`;

// JSON-LD CollectionPage + ItemList
const collectionLd = {
    "@context": "https://schema.org",
    "@type": "CollectionPage",
    name: title,
    description,
    url: pageUrl,
    isPartOf: { "@type": "WebSite", name: "Imprimibles Educativos", url: site },
};

const itemListLd = list.length
    ? {
          "@context": "https://schema.org",
          "@type": "ItemList",
          itemListElement: list.map((e, i) => ({
              "@type": "ListItem",
              position: i + 1,
              url: new URL(`/imprimibles/${e.slug}`, site).href, // sin slash final
              name: e.data?.title,
          })),
      }
    : null;
---

<BaseLayout
    title={`${title} | Imprimibles Educativos`}
    description={description}
    ogType="website"
>
    <Fragment slot="head">
        <link rel="canonical" href={pageUrl} />
        <meta property="og:url" content={pageUrl} />
        <script
            type="application/ld+json"
            set:html={JSON.stringify(collectionLd)}
        />
        {
            itemListLd && (
                <script
                    type="application/ld+json"
                    set:html={JSON.stringify(itemListLd)}
                />
            )
        }
        {list.length === 0 && <meta name="robots" content="noindex, follow" />}
    </Fragment>

    {/* Breadcrumbs visibles */}
    <nav aria-label="Breadcrumb" class="max-w-6xl mx-auto px-4 pt-6">
        <ol class="flex flex-wrap items-center gap-2 text-sm text-slate-600">
            <li>
                <a href="/imprimibles" class="hover:underline">Imprimibles</a>
            </li>
            <li aria-hidden>›</li>
            <li class="text-slate-900 font-medium">{level}</li>
        </ol>
    </nav>

    <section class="max-w-6xl mx-auto py-8 px-4">
        <h1 class="text-2xl font-bold">{title}</h1>
        <p class="text-slate-600 mt-1">{description}</p>

        {/* Intro dinámico para SEO */}
        <div class="mt-4 text-slate-700 text-base leading-relaxed">
            <p>
                En esta sección tienes una selección de <strong
                    >imprimibles para {level}</strong
                >. Son fichas diseñadas para adaptarse a este nivel educativo,
                con el fin de practicar y afianzar conocimientos de forma
                sencilla y divertida.
            </p>
        </div>

        {
            list.length === 0 ? (
                <p class="mt-6 text-slate-600">
                    Aún no hay imprimibles para este nivel.
                </p>
            ) : (
                <>
                    <h2 class="text-xl font-semibold mt-8 mb-4">
                        Recursos disponibles
                    </h2>
                    <div class="grid grid-cols-1 sm:grid-cols-3 gap-4">
                        {list.map((e) => {
                            const href = `/imprimibles/${e.slug}`; // sin slash final
                            const cover = e.data?.cover ?? "/og.png";
                            return (
                                <a
                                    href={href}
                                    data-astro-prefetch
                                    class="block rounded-2xl overflow-hidden border hover:shadow transition"
                                    aria-label={`Ver ficha de ${e.data?.title}`}
                                >
                                    <img
                                        src={cover}
                                        alt={e.data?.title}
                                        loading="lazy"
                                        decoding="async"
                                        class="w-full aspect-[4/3] object-cover"
                                    />
                                    <div class="p-3">
                                        <h3 class="font-semibold line-clamp-2">
                                            {e.data?.title}
                                        </h3>
                                        <p class="text-sm text-slate-500 line-clamp-2">
                                            {e.data?.description}
                                        </p>
                                        <div class="mt-2 text-xs text-slate-500">
                                            {e.data?.subject && (
                                                <span>{e.data.subject}</span>
                                            )}
                                            {e.data?.level && (
                                                <span> · {e.data.level}</span>
                                            )}
                                        </div>
                                    </div>
                                </a>
                            );
                        })}
                    </div>
                </>
            )
        }
    </section>
</BaseLayout>
