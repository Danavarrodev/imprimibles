---
import BaseLayout from "../layouts/BaseLayout.astro";
import CardImprimible from "../components/CardImprimible.astro";
import CardRecurso from "../components/CardRecurso.astro";
import { getCollection } from "astro:content";

// Contenido
const imprimibles = await getCollection("imprimibles");
const recursos = await getCollection("recursos");
const EAGER_COUNT = 6;

// Orden por fecha
const sortedImprimibles = imprimibles
  .map((it) => ({ ...it, __ts: new Date(it.data?.date || 0).getTime() }))
  .sort((a, b) => b.__ts - a.__ts);

const sortedRecursos = recursos
  .map((it) => ({ ...it, __ts: new Date(it.data?.date || 0).getTime() }))
  .sort((a, b) => b.__ts - a.__ts);

// Mezcla para "Últimos añadidos"
const latestMixed = [
  ...sortedImprimibles.map((x) => ({ type: "imprimible", ...x })),
  ...sortedRecursos.map((x) => ({ type: "recurso", ...x })),
]
  .sort((a, b) => b.__ts - a.__ts)
  .slice(0, EAGER_COUNT);



const subjects = Array.from(
  new Set(imprimibles.map((i) => i.data.subject).filter(Boolean)),
)

  .sort((a, b) => a.localeCompare(b, "es"));

// --- ICONOS ---
const SVG = {
  book: `<svg xmlns="http://www.w3.org/2000/svg" width="100%" height="100%" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2.2"><path d="M4 19.5A2.5 2.5 0 0 1 6.5 17H20"/><path d="M4 4.5A2.5 2.5 0 0 1 6.5 2H20v18H6.5A2.5 2.5 0 0 0 4 22.5Z"/></svg>`,
  calc: `<svg xmlns="http://www.w3.org/2000/svg" width="100%" height="100%" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2.2"><rect x="5" y="2" width="14" height="20" rx="2"/><path d="M8 6h8M8 10h2m4 0h2M8 14h2m4 0h2M8 18h8"/></svg>`,
  leaf: `<svg xmlns="http://www.w3.org/2000/svg" width="100%" height="100%" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2.2"><path d="M11 3C7 7 5 10 5 14a7 7 0 0 0 14 0c0-6-4-9-8-11Z"/><path d="M7 14c4 0 6-2 10-6"/></svg>`,
  globe: `<svg xmlns="http://www.w3.org/2000/svg" width="100%" height="100%" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2.2"><circle cx="12" cy="12" r="10"/><path d="M2 12h20M12 2a18 18 0 0 1 0 20M12 2a18 18 0 0 0 0 20"/></svg>`,
  palette: `<svg xmlns="http://www.w3.org/2000/svg" width="100%" height="100%" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2.2"><path d="M12 22a10 10 0 1 1 9.54-13.06 3 3 0 0 1-2.87 4.06h-1.67a2 2 0 0 0-2 2 3 3 0 0 1-3 3Z"/><circle cx="7.5" cy="10.5" r="1"/><circle cx="12" cy="7.5" r="1"/><circle cx="16.5" cy="10.5" r="1"/></svg>`,
  lang: `<svg xmlns="http://www.w3.org/2000/svg" width="100%" height="100%" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2.2"><path d="M21 11.5a8.38 8.38 0 0 1-1.9 5.4 8.5 8.5 0 0 1-6.6 3.1c-1.6 0-3.1-.4-4.4-1.2L3 20l1.3-3.9a8.5 8.5 0 0 1-1.2-4.6 8.5 8.5 0 0 1 3.1-6.6 8.38 8.38 0 0 1 5.4-1.9h.2a8.5 8.5 0 0 1 8.2 8.0Z"/></svg>`,
  doc: `<svg xmlns="http://www.w3.org/2000/svg" width="100%" height="100%" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2.2"><path d="M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8Z"/><path d="M14 2v6h6"/><path d="M10 13h4M8 17h8"/></svg>`,
} as const;

type SvgKey = keyof typeof SVG;
function subjectIconKey(label: string): SvgKey {
  const k = String(label).toLowerCase();
  if (k === "matemáticas" || k === "matematicas") return "calc";
  if (k === "lengua") return "book";
  if (k === "ciencias naturales") return "leaf";
  if (k === "ciencias sociales") return "globe";
  if (k === "inglés" || k === "ingles") return "lang";
  if (k === "arte") return "palette";
  return "doc";
}

// Helper para cover
function coverSrc(c:any) {
  if (!c) return "/og.png";
  return (typeof c === "object" && "src" in c) ? c.src : c;
}

// JSON-LD
const site = Astro.site ?? "https://imprimibleseduca.com";
const websiteJsonLd = {
  "@context": "https://schema.org",
  "@type": "WebSite",
  url: site,
  name: "Imprimibles Educativos",
  potentialAction: {
    "@type": "SearchAction",
    target: `${site}/imprimibles?search={search_term_string}`,
    "query-input": "required name=search_term_string",
  },
};
---

<BaseLayout
  title="Imprimibles y recursos educativos listos para imprimir | Inicio"
  description="Descarga gratis fichas, pósters, juegos y plantillas en PDF listos para imprimir. Imprimibles y recursos por asignatura, nivel y categoría."
>
  <Fragment slot="head">
    <script
      type="application/ld+json"
      set:html={JSON.stringify(websiteJsonLd)}
    />
  </Fragment>

  <!-- HERO -->
  <section class="mx-auto max-w-7xl px-4 pt-10 pb-8 grid gap-8 md:grid-cols-2 items-center">
    <div class="space-y-5">
      <h1 class="text-4xl md:text-5xl font-extrabold leading-tight tracking-tight text-slate-900">
        Material educativo <span class="text-indigo-600">listo para imprimir</span>
      </h1>
      <p class="text-slate-600 text-lg">
        Fichas, pósters y juegos para <strong>infantil y primaria</strong>, y plantillas útiles para el día a día.
      </p>
      <div class="flex flex-wrap gap-3">
        <a href="/imprimibles" class="btn-primary">Ver imprimibles →</a>
        <a href="/recursos" class="btn-primary">Ver recursos →</a>
      </div>
      <p class="text-sm text-slate-500">Gratis · Formato A4 · Listos para imprimir</p>
    </div>

    <!-- Collage visual -->
    <div class="rounded-2xl border border-slate-200 bg-white p-3">
      <div class="grid grid-cols-3 gap-2">
        {
          latestMixed.slice(0, 6).map((it) => (
            <a
              href={it.type === "imprimible" ? `/imprimibles/${it.slug}` : `/recursos/${it.slug}`}
              class="block group overflow-hidden rounded-xl border border-slate-200"
              aria-label={`Ver ${it.data?.title || 'recurso'}`}
            >
              <img
                src={coverSrc(it.data?.cover)}
                alt={it.data?.title || "Portada"}
                class="aspect-[4/3] w-full object-cover transition-transform duration-300 group-hover:scale-105"
                loading="eager"
              />
            </a>
          ))
        }
      </div>
      <p class="mt-3 text-center text-sm text-slate-500">Una muestra de lo último añadido</p>
    </div>
  </section>

  <!-- ACCESOS RÁPIDOS -->
  <section class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-12">
    <div class="text-center mb-10">
      <h2 class="text-3xl font-extrabold text-slate-900 sm:text-4xl">
        Explora por asignatura 📚
      </h2>
      <p class="mt-4 text-lg text-slate-600">
        Encuentra recursos educativos y hojas de trabajo para cualquier materia.
      </p>
    </div>

   <div class="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-6 gap-6">
  {
    subjects.map((s) => {
      const iconKey = subjectIconKey(s);
      const iconSVG = SVG[iconKey] ?? SVG.doc;
      return (
        <a
          aria-label={`Ver imprimibles de ${s}`}
          href={`/imprimibles/asignatura/${encodeURIComponent(s)}`}
          class="flex flex-col items-center justify-center p-6 bg-white rounded-3xl shadow-lg border border-gray-200 transition-all duration-300 hover:shadow-2xl hover:border-indigo-500 transform hover:-translate-y-2"
        >
          <div class="w-24 h-24 flex items-center justify-center rounded-full bg-[#4f39f6] shadow-inner">
            <span
              class="flex items-center justify-center w-14 h-14 text-white [&>svg]:w-full [&>svg]:h-full [&>svg]:stroke-current"
              set:html={iconSVG}
            />
          </div>
          <span class="mt-4 text-center font-semibold text-base text-slate-800">{s}</span>
        </a>
      );
    })
  }

  {/* Tarjeta extra: Recursos */}
  <a
    aria-label="Ver recursos"
    href="/recursos"
    class="flex flex-col items-center justify-center p-6 bg-white rounded-3xl shadow-lg border border-gray-200 transition-all duration-300 hover:shadow-2xl hover:border-indigo-500 transform hover:-translate-y-2"
  >
    <div class="w-24 h-24 flex items-center justify-center rounded-full bg-[#4f39f6] shadow-inner">
      <span
        class="flex items-center justify-center w-14 h-14 text-white [&>svg]:w-full [&>svg]:h-full [&>svg]:stroke-current"
        set:html={SVG.doc}
      />
    </div>
    <span class="mt-4 text-center font-semibold text-base text-slate-800">Recursos</span>
  </a>
</div>

  </section>

  <!-- ÚLTIMOS AÑADIDOS -->
  <section class="py-12 bg-gradient-to-b from-white to-slate-50">
    <div class="mx-auto max-w-7xl px-4">
      <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between mb-8">
        <div>
          <h2 class="text-2xl md:text-3xl font-bold tracking-tight text-slate-900">Últimos añadidos</h2>
          <p class="mt-1 text-slate-600 text-sm md:text-base">Lo más reciente del catálogo: imprimibles y recursos.</p>
        </div>
      </div>

      <div class="grid gap-6 sm:grid-cols-2 lg:grid-cols-3">
        {
          latestMixed.map((it, i) =>
            it.type === "imprimible" ? (
              <CardImprimible
                title={it.data.title}
                description={it.data.description}
                cover={it.data.cover}
                subject={it.data.subject}
                level={it.data.level}
                slug={it.slug}
                pdf={it.data.pdf}
                eager={i < EAGER_COUNT}
              />
            ) : (
              <CardRecurso
                title={it.data.title}
                description={it.data.description}
                cover={it.data.cover}
                category={it.data.category}
                tags={it.data.tags}
                slug={it.slug}
                pdf={it.data.pdf}
              />
            ),
          )
        }
      </div>

      {
        latestMixed.length === 0 && (
          <p class="mt-10 rounded-xl border border-dashed p-12 text-center text-slate-600">
            Aún no hay contenido publicado. ¡Vuelve pronto! 😊
          </p>
        )
      }
    </div>
  </section>
</BaseLayout>
