---
import { getCollection } from "astro:content";
import BaseLayout from "../../layouts/BaseLayout.astro";
import CardRecurso from "../../components/CardRecurso.astro";

// Dataset
const all = await getCollection("recursos");

// Listas Ãºnicas
const categories = Array.from(new Set(all.map((x) => x.data.category)))
  .filter(Boolean)
  .sort((a, b) => a.localeCompare(b, "es"));
const tags = Array.from(new Set(all.flatMap((x) => x.data.tags ?? [])))
  .filter(Boolean)
  .sort((a, b) => a.localeCompare(b, "es"));

const EAGER_COUNT = 12;

// Mapeo a items (como en imprimibles)
const items = all.map((x) => ({
  slug: x.slug,
  title: x.data.title,
  description: x.data.description,
  cover: x.data.cover,
  category: x.data.category,
  tags: x.data.tags ?? [],
  pdf: x.data.pdf,
}));

// ðŸ”— dominio para JSONâ€‘LD
const site = (Astro.site ?? "https://imprimibleseduca.com")
  .toString()
  .replace(/\/$/, "");
---

<BaseLayout
  title="Recursos | Plantillas y materiales Ãºtiles"
  description="Encuentra recursos descargables para el dÃ­a a dÃ­a. Filtra por categorÃ­a y etiqueta."
>
  <Fragment slot="head">
    <!-- Canonical fijo -->
    <link rel="canonical" href="https://imprimibleseduca.com/recursos" />
    <!-- Noindex en variantes con querystring -->
    <script is:inline>
      if (typeof window !== "undefined" && window.location.search.length > 1) {
        const meta = document.createElement("meta");
        meta.name = "robots";
        meta.content = "noindex, follow";
        document.head.appendChild(meta);

        const link = document.createElement("link");
        link.rel = "canonical";
        link.href = "https://imprimibleseduca.com/recursos";
        document.head.appendChild(link);
      }
    </script>
  </Fragment>

  <main class="bg-gray-50">
    <!-- HERO (idÃ©ntico en layout) -->
    <section class="mx-auto max-w-7xl px-4 pt-10 pb-6">
      <div class="rounded-2xl bg-white/60 ring-1 ring-gray-200 p-6 md:p-8">
        <h1 class="text-2xl md:text-3xl font-bold tracking-tight text-gray-900">
          Recursos
        </h1>
        <p class="mt-2 text-gray-600 max-w-2xl">
          Plantillas y materiales listos para descargar. Filtra por
          categorÃ­a y etiqueta, o explora todo el catÃ¡logo.
        </p>

        <!-- Accesos rÃ¡pidos (chips) -->
        <div class="mt-4 flex flex-wrap gap-2">
          {
            categories.slice(0, 6).map((c) => (
              <button
                class="quick-chip rounded-full border border-gray-300 bg-white px-3 py-1.5 text-sm hover:bg-gray-50"
                data-quick="category"
                data-value={c}
              >
                {c}
              </button>
            ))
          }
          {
            tags.slice(0, 6).map((t) => (
              <button
                class="quick-chip rounded-full bg-gray-900 text-white px-3 py-1.5 text-sm hover:opacity-90"
                data-quick="tag"
                data-value={t}
              >
                #{t}
              </button>
            ))
          }
        </div>
      </div>
    </section>

    <!-- FILTROS sticky (mismo patrÃ³n) -->
    <section class="sticky top-0 z-10 border-b border-gray-200 bg-white/90 backdrop-blur">
      <div class="mx-auto max-w-7xl px-4 py-3">
        <div class="flex flex-col gap-3 md:flex-row md:items-center md:justify-between">
          <div class="flex items-center gap-3">
            <label class="text-sm text-gray-700 flex items-center gap-2">
              CategorÃ­a
              <select
                id="f-category"
                class="rounded-md border-gray-300 text-sm focus:border-gray-900 focus:ring-gray-900"
                data-filter="category"
              >
                <option value="">Todas</option>
                {categories.map((c) => <option value={c}>{c}</option>)}
              </select>
            </label>
            <label class="text-sm text-gray-700 flex items-center gap-2">
              Etiqueta
              <select
                id="f-tag"
                class="rounded-md border-gray-300 text-sm focus:border-gray-900 focus:ring-gray-900"
                data-filter="tag"
              >
                <option value="">Todas</option>
                {tags.map((t) => <option value={t}>{t}</option>)}
              </select>
            </label>
          </div>
          <div class="flex items-center gap-3">
            <input
              id="f-search"
              type="search"
              placeholder="Buscar por tÃ­tuloâ€¦"
              class="w-64 rounded-md border-gray-300 text-sm focus:border-gray-900 focus:ring-gray-900"
            />
            <button
              type="button"
              id="f-clear"
              class="rounded-md border border-gray-300 bg-white px-3 py-1.5 text-sm hover:bg-gray-50"
            >
              Limpiar
            </button>
          </div>
        </div>
      </div>
    </section>

    <!-- GRID (mismas columnas y gaps) -->
    <section class="mx-auto max-w-7xl px-4 py-8">
      <div
        id="cards"
        class="grid grid-cols-1 gap-6 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4"
      >
        {
          items.map((it, i) => (
            <CardRecurso
              slug={it.slug}
              title={it.title}
              description={it.description}
              cover={it.cover}
              category={it.category}
              tags={it.tags}
              pdf={it.pdf}
              eager={i < EAGER_COUNT}
            />
          ))
        }
      </div>

      <div
        id="empty"
        class="hidden mt-10 rounded-xl border border-dashed p-12 text-center text-gray-600"
      >
        No hay resultados con esos filtros.
      </div>
    </section>
  </main>

  <!-- Script de filtrado (calcado al de imprimibles, adaptado) -->
  <script is:raw>
    (function () {
      const $cards = document.getElementById("cards");
      const $empty = document.getElementById("empty");
      const $cat = document.getElementById("f-category");
      const $tag = document.getElementById("f-tag");
      const $search = document.getElementById("f-search");
      const $clear = document.getElementById("f-clear");

      const data = Array.from($cards.children).map((card) => ({
        card,
        category: card.getAttribute("data-category") || "",
        tags: (card.getAttribute("data-tags") || "").toLowerCase(),
        title: (card.getAttribute("data-title") || "").toLowerCase(),
      }));

      function apply() {
        const fc = $cat.value || "";
        const ft = ($tag.value || "").toLowerCase();
        const q = ($search.value || "").toLowerCase().trim();

        let visible = 0;
        for (const it of data) {
          const okC = !fc || it.category === fc;
          const okT = !ft || it.tags.split(",").includes(ft);
          const okQ = !q || it.title.includes(q);
          const show = okC && okT && okQ;
          it.card.style.display = show ? "" : "none";
          if (show) visible++;
        }
        $empty.classList.toggle("hidden", visible !== 0);
      }

      [$cat, $tag, $search].forEach((el) => el && el.addEventListener("input", apply));
      $clear?.addEventListener("click", () => {
        $cat.value = "";
        $tag.value = "";
        $search.value = "";
        apply();
      });

      // Accesos rÃ¡pidos
      document.querySelectorAll(".quick-chip").forEach((btn) => {
        btn.addEventListener("click", () => {
          const type = btn.getAttribute("data-quick");
          const val = btn.getAttribute("data-value") || "";
          if (type === "category") $cat.value = val;
          if (type === "tag") $tag.value = val;
          apply();
          const sticky = document.querySelector("section.sticky");
          if (sticky) {
            window.scrollTo({ top: sticky.offsetTop, behavior: "smooth" });
          }
        });
      });

      apply();
    })();
  </script>

  <style is:global>
    .quick-chip:focus-visible { outline: 2px solid currentColor; outline-offset: 2px; }
  </style>

  <!-- JSON-LD: listado de recursos (idÃ©ntico formato) -->
  <script
    type="application/ld+json"
    set:html={JSON.stringify({
      "@context": "https://schema.org",
      "@type": "ItemList",
      itemListElement: items.map((it, idx) => ({
        "@type": "ListItem",
        position: idx + 1,
        url: `${site}/recursos/${it.slug}`,
      })),
    })}
  />
</BaseLayout>
