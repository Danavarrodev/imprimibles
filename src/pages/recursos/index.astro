---
import BaseLayout from "../../layouts/BaseLayout.astro";
import { getCollection } from "astro:content";
import CardRecurso from "../../components/CardRecurso.astro";

const all = await getCollection("recursos");

// Orden por fecha (tolerante si falta date)
const sorted = all
  .map((it) => ({ ...it, __ts: new Date(it.data?.date || 0).getTime() }))
  .sort((a, b) => b.__ts - a.__ts);

const categories = Array.from(new Set(all.map((x) => x.data.category)))
  .filter(Boolean)
  .sort((a, b) => a.localeCompare(b, "es"));
const tags = Array.from(new Set(all.flatMap((x) => x.data.tags ?? [])))
  .filter(Boolean)
  .sort((a, b) => a.localeCompare(b, "es"));

const EAGER_COUNT = 12;

// Subconjunto realmente mostrado en la pÃ¡gina
const displayed = sorted.slice(0, EAGER_COUNT);

// ðŸ”— dominio para JSONâ€‘LD
const site = (Astro.site ?? "https://imprimibleseduca.com")
  .toString()
  .replace(/\/$/, "");
---

<BaseLayout
  title="Recursos"
  description="Plantillas y materiales Ãºtiles para el dÃ­a a dÃ­a"
>
  <!-- âœ… SEO: canÃ³nico base + noindex en variantes con filtros -->
  <Fragment slot="head">
    <!-- CanÃ³nico estÃ¡tico a la versiÃ³n limpia -->
    <link rel="canonical" href={`${site}/recursos`} />
    <script is:inline>
      if (typeof window !== "undefined" && window.location.search.length > 1) {
        const meta = document.createElement("meta");
        meta.name = "robots";
        meta.content = "noindex, follow";
        document.head.appendChild(meta);

        // Si hay parÃ¡metros, aseguramos canÃ³nico limpio
        const link = document.createElement("link");
        link.rel = "canonical";
        link.href = `${location.origin}/recursos`;
        document.head.appendChild(link);
      }
    </script>
  </Fragment>

  <h1 class="text-3xl font-bold mb-4">Recursos</h1>

  <!-- Barra filtros -->
  <div
    class="sticky top-0 z-10 bg-white/70 backdrop-blur supports-[backdrop-filter]:bg-white/60 border-y py-3 mb-6"
  >
    <div class="max-w-6xl mx-auto px-2 grid grid-cols-1 md:grid-cols-3 gap-3">
      <select id="filter-category" class="border rounded-xl px-3 py-2">
        <option value="">Todas las categorÃ­as</option>
        {categories.map((c) => <option value={c}>{c}</option>)}
      </select>

      <input
        id="filter-q"
        type="search"
        placeholder="Buscar por tÃ­tulo, descripciÃ³n o etiquetaâ€¦"
        class="border rounded-xl px-3 py-2"
      />

      <select id="filter-tag" class="border rounded-xl px-3 py-2">
        <option value="">Todas las etiquetas</option>
        {tags.map((t) => <option value={t}>{t}</option>)}
      </select>
    </div>
  </div>

  <div id="grid" class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
    {
      displayed.map((r) => (
        <CardRecurso
          slug={r.slug}
          title={r.data.title}
          description={r.data.description}
          cover={r.data.cover}
          category={r.data.category}
          tags={r.data.tags}
          pdf={r.data.pdf}
        />
      ))
    }
  </div>

  <script>
    const q = document.getElementById("filter-q");
    const sc = document.getElementById("filter-category");
    const st = document.getElementById("filter-tag");
    const grid = document.getElementById("grid");

    function norm(s) {
      return (s || "").toLowerCase();
    }

    function applyFilters() {
      const qv = norm(q.value);
      const cat = sc.value;
      const tag = st.value;

      for (const card of grid.children) {
        const title = norm(card.querySelector("h3")?.textContent);
        const desc = norm(card.querySelector("p")?.textContent);
        const cardCat = card.getAttribute("data-category") || "";
        const cardTags = (card.getAttribute("data-tags") || "")
          .split(",")
          .map(norm);

        let ok = true;

        if (cat && cardCat !== cat) ok = false;
        if (tag && !cardTags.includes(norm(tag))) ok = false;

        if (qv) {
          const hay =
            title.includes(qv) ||
            desc.includes(qv) ||
            cardTags.some((t) => t.includes(qv));
          if (!hay) ok = false;
        }

        card.style.display = ok ? "" : "none";
      }
    }

    q.addEventListener("input", applyFilters);
    sc.addEventListener("change", applyFilters);
    st.addEventListener("change", applyFilters);
  </script>

  <!-- âœ… SEO: JSONâ€‘LD ItemList SOLO de los elementos mostrados -->
  <script
    type="application/ld+json"
    set:html={JSON.stringify({
      "@context": "https://schema.org",
      "@type": "ItemList",
      itemListElement: displayed.map((r, idx) => ({
        "@type": "ListItem",
        position: idx + 1,
        url: `${site}/recursos/${r.slug}`,
      })),
    })}
  />
</BaseLayout>
